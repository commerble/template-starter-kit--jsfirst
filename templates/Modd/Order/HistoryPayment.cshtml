@{
  var payment = Page.ViewData.Model as VM.HistoryPayment;
  var viewData = Page.ViewData[BasicController.ViewMessageKey] as ViewMessages;
  var paymentMethods = new Dictionary<PaymentMethod,string>{
    { PaymentMethod.CashOnDelivery, "代引き" },
    { PaymentMethod.Cvs, "コンビニ" },
    { PaymentMethod.Offsite, "オフサイト" },
    { PaymentMethod.Offline, "オフライン" },
    { PaymentMethod.Token, "クレジットカード" },
    { PaymentMethod.PointOnly, "全額ポイント" },
    { PaymentMethod.External, "外部遷移" },
    //{ PaymentMethod.None, "決済方法なし"},
  };
}
<script id="pagedata" type="application/json">
  @Raw(Jil.JSON.Serialize(new{
    errors = viewData.Errors,
    messages = viewData.Messages,
    usablePaymentMethods = paymentMethods.Select(kv => new SelectListItem { 
      Text = kv.Value, 
      Value = ((int)kv.Key).ToString(), 
      Selected = kv.Key == payment.Cart.PaymentMethod, 
      Disabled = !payment.Cart.UsablePaymentMethod.Contains(kv.Key)
    }),
    paymentMethod = (int)payment.PaymentMethod,
    paymentDetail = payment.OrderCustomer.PaymentDetail,
    accountUrl  = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Account"}),
    pointUrl    = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Point"}),
    passwordUrl = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Password"}),
    quitUrl     = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Quit"}),
    historyUrl  = Page.Url.RouteUrl("ModdDefault", new { controller="Order", action="History", id=(int?)null}),
    noticeUrl   = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Notices"}),
    favoriteUrl = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Favorites"}),
    addressesUrl= Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Addresses"}),
    cancelUrl = Page.Url.RouteUrl("ModdDefault", new { controller="Order", action="HistoryCancel", id=payment.Cart.OrderId} ),
    action = Page.Template.SecuredLink("ModdDefault", new { controller="Order", action="History", id=payment.Cart.OrderId}),
    command = "payment"
  }, Jil.Options.ISO8601))
</script>
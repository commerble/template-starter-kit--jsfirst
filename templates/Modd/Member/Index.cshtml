@{
  var viewData = Page.ViewData[BasicController.ViewMessageKey] as ViewMessages; 
  var user = Membership.GetUser(Page.User.Identity.Name) as Crosswarp.Modd.Account.Web.ModdMembershipUser;
}
<script id="pagedata" type="application/json">
  @Raw(Jil.JSON.Serialize(new{
    errors = viewData.Errors,
    messages = viewData.Messages,
    username = user.UserName,
    accountUrl  = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Account"}),
    pointUrl    = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Point"}),
    passwordUrl = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Password"}),
    quitUrl     = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Quit"}),
    historyUrl  = Page.Url.RouteUrl("ModdDefault", new { controller="Order", action="History"}),
    noticeUrl   = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Notices"}),
    favoriteUrl = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Favorites"}),
    addressesUrl= Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Addresses"}),
    logoutUrl   = Page.Url.RouteUrl("ModdDefault", new { controller="Site", action="Logout", returnUrl=Href("~/")}),
  }, Jil.Options.ISO8601))
</script>

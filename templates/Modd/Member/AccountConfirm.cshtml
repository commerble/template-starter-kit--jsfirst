@{
  var account = Page.ViewData.Model as VM.Account;
  var viewData = Page.ViewData[BasicController.ViewMessageKey] as ViewMessages; 
  var tokenTag = Page.Html.AntiForgeryToken().ToString();
  var tokenName = Regex.Match(tokenTag, @"name=""([^\"".]*)""");
  var tokenValue = Regex.Match(tokenTag, @"value=""([^\"".]*)""");
  var modelTag =Page.Html.ModelToObjectState("model", account);
  var modelName = Regex.Match(modelTag, @"name=""([^\"".]*)""");
  var modelValue = Regex.Match(modelTag, @"value=""([^\"".]*)""");
}
<script id="pagedata" type="application/json">
  @Raw(Jil.JSON.Serialize(new{
    errors = viewData.Errors,
    messages = viewData.Messages,
    account,
    name = $"{account.LastName} {account.FirstName}",
    kana = $"{account.LastNameKana} {account.FirstNameKana}",
    birthday = account.Birthday?.ToString("yyyy年MM月dd日"),
    sex = account.Sex == HumanSexes.Male ? "男性"
      : account.Sex == HumanSexes.Female ? "女性"
      : "未指定",
    subscribe = account.Subscribe ? "受け取る" : "受け取らない",
    token = tokenValue.Groups[1].Value,
    model = modelValue.Groups[1].Value,
    accountUrl  = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Account"}),
    pointUrl    = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Point"}),
    passwordUrl = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Password"}),
    quitUrl     = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Quit"}),
    historyUrl  = Page.Url.RouteUrl("ModdDefault", new { controller="Order", action="History"}),
    noticeUrl   = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Notices"}),
    favoriteUrl = Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Favorites"}),
    addressesUrl= Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Addresses"}),
    actionUsernameUrl = Page.Template.SecuredLink("ModdDefault", new {controller="Member", action="UserName"}),
    actionAccountUrl  = Page.Template.SecuredLink("ModdDefault", new {controller="Member", action="Account"}),
    actionAddressUrl  = Page.Template.SecuredLink("ModdDefault", new {controller="Member", action="AccountAddress"}),
	  command = "update"
  }, Jil.Options.ISO8601))
</script>
